* {
    box-sizing: border-box;
}

@media (prefers-color-scheme: light) {
    html {
        --canvas: rgb(246, 246, 246);
        --alt-canvas: #e0f0eb;
        --inactive-selected: rgb(200, 200, 200);
        --line: #888;
        --field-highlight: rgb(255, 254, 239);
        --canvas-highlight: rgb(255, 249, 173);
    }
}

@media (prefers-color-scheme: dark) {
    html {
        --canvas: rgb(46, 42, 48);
        --inactive-selected: rgb(100, 100, 100);
        --alt-canvas: #1e4438;
        --line: #888;
        --field-highlight: rgb(60, 56, 0);
        --canvas-highlight: rgb(96, 89, 0);
    }
}

html {
    color-scheme: light dark;
    background-color: var(--canvas);
    --line-height: 21px;
    --td-border: 1px;
    --td-hpad: calc(var(--line-height) * 0.2);
    font-size: 14px;
    line-height: var(--line-height);
    font-family: Avenir, 'Avenir Next LT Pro', Montserrat, Corbel, 'URW Gothic', source-sans-pro, sans-serif;
}

pre {
    margin: 0;
}

body {
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    height: 100vh;
    overflow: hidden;
    padding: var(--line-height);
    gap: var(--line-height);
}

body.popup {
    width: max-content;
}

.all {
    display: grid;
    grid: minmax(0, 1fr) / max-content 1fr;
    gap: var(--line-height);
}

#datas {
    display: none;
}

#account {
    display: grid;
    grid: minmax(0, 1fr) / 1fr max-content;
    gap: var(--line-height);
}

.scroll {
    overflow-y: auto;
}

.column {
    display: grid;
    gap: var(--line-height);
    grid: minmax(0, max-content) / auto;
}

.controls,
.tools {
    display: flex;
    gap: var(--line-height);
}

.tools {
    margin-left: auto;
    flex-wrap: wrap;
}

button,
input {
    font: inherit;
    /* Precisely fit controls into a line of text */
    height: var(--line-height);
    vertical-align: bottom;
    margin: 0;
}

td button,
td input {
    height: var(--td-line-height);
    margin: 0;
}

td button,
td [type="submit"] {
    min-width: max-content;
}

button,
[type="submit"] {
    line-height: 0;
}

table {
    border-spacing: var(--td-border);
}

.t4 {
    --cell-width: calc(4 * var(--line-height));
}

.t5 {
    --cell-width: calc(5 * var(--line-height));
}

.t6 {
    --cell-width: calc(6 * var(--line-height));
}

.t8 {
    --cell-width: calc(8 * var(--line-height));
}

.t9 {
    --cell-width: calc(9 * var(--line-height));
}

.th,
th {
    user-select: none;
    font-weight: 700;
    text-align: center;
}

tr.a,
:not(tr).a>* {
    background-color: var(--alt-canvas);
}

tr.b,
:not(tr).b>* {
    /* make dragging look nicer */
    background-color: var(--canvas);
}

.td,
.th,
td,
th {
    /* Make each table row take exactly one line */
    --td-line-height: calc(var(--line-height) - var(--td-border));
    line-height: var(--td-line-height);
    width: var(--cell-width);
    outline: var(--td-border) solid var(--line);
    padding: 0 var(--td-hpad);
}

main.overview {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    gap: var(--line-height);
    overflow-y: auto;
}

@media (max-width: 500px) {
    main.overview {
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
    }
}

main.manage,
main.edit {
    display: flex;
    gap: var(--line-height);
    flex-direction: column;
    align-items: center;
    overflow-y: auto;
}

main.otg {
    overflow: visible;
}

.edit,
edit-part {
    display: flex;
    gap: var(--line-height);
    flex-direction: column;
}

[draggable=true] {
    cursor: grab;
}

.dragging {
    cursor: grabbing;
}

tr.droppable,
tbody.droppable>:last-child,
tr.droppable>.tdinput>*,
tbody.droppable>:last-child>.tdinput>* {
    /* work around chrome bug */
    box-shadow: inset 0 -2px 0 LinkText;
    box-shadow: inset 0 -2px 0 AccentColor;
}

.droppable+tr,
.droppable+tbody>:first-child,
.droppable+td>.tdinput>*,
.droppable+tbody>:first-child>.tdinput>* {
    box-shadow: inset 0 2px 0 LinkText;
    box-shadow: inset 0 2px 0 AccentColor;
}

.groupname {
    text-align: center;
}

.dragging button {
    cursor: grabbing;
}

.account {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--line-height);
}

@media (max-width: 900px) {
    .account {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr;
    }
}

entry-list .checked>* {
    background-color: var(--inactive-selected);
    color: ButtonText;
}

entry-list:focus .checked>* {
    background-color: SelectedItem;
    color: SelectedItemText;
}

.grid {
    align-self: start;
    max-height: 100%;
    overflow-y: auto;
    display: grid;
    gap: var(--td-border);
    padding: var(--td-border);
}

.grid.c5 {
    grid: auto-flow / max-content 1fr max-content max-content max-content;
}

.grid.c4 {
    grid: auto-flow / max-content 1fr max-content max-content;
}

.c5 .disclosure+label {
    grid-column: span 2;
}

.grid>* {
    display: contents;
}

.grid .ellipsis {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.transactions.grid .th {
    position: sticky;
    top: 0;
    background-color: var(--canvas);
}

@media (max-width: 500px) {
    .grid.c4 {
        grid: auto-flow dense / max-content 1fr 1fr;
    }

    .grid.c4 span:nth-child(4n+1) {
        grid-row: span 2;
    }

    .grid.c4 span:nth-child(5n+2) {
        grid-column: 2 / 4;
    }

    .grid.c5 {
        grid: auto-flow dense / max-content 1fr 1fr max-content;
    }

    .grid.c5 span:nth-child(5n+1) {
        grid-row: span 2;
    }

    .grid.c5 span:nth-child(5n+2) {
        grid-column: 2 / 5;
    }

    .grid.c5 .is_inbox :nth-child(5n+4) {
        grid-column: span 2;
    }

    .grid.c5 .is_inbox :nth-child(5n+5) {
        display: none;
    }

    .transactions.grid .th {
        position: static;
    }
}

.longtext {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    max-width: var(--cell-width);
}

.is_inbox {
    color: GrayText;
    font-style: italic;
}

.transaction-details {
    overflow-y: auto;
}

.transaction-details>:not(.checked) {
    display: none;
}

.transaction-details>div {
    display: flex;
    flex-direction: column;
    gap: var(--line-height);
}

.transaction-details table {
    width: 100%;
}

/* TODO: Set input widths like this*/
[is="standalone-currency-input"] {
    max-width: calc(4 * var(--line-height));
}

.disclosure {
    position: absolute;
    left: -100px;
}

.disclosure:focus-visible+label {
    outline: 3px solid LinkText;
    outline: 3px solid AccentColor;
    border-radius: 2px;
    position: relative;
    z-index: 1;
}

.disclosure+label::before {
    content: '▶';
    display: inline-block;
    width: 1em;
}

.disclosure:checked+label::before {
    content: '▼';
    display: inline-block;
    width: 1em;
}

.disclosure+label+* {
    display: none;
}

.disclosure:checked+label+* {
    display: initial;
}

form {
    display: contents;
}

edit-part>div:empty {
    display: none;
}

hr {
    width: 100%;
    margin: 0;
    border-style: solid solid none none;
    align-self: stretch;
}

.tdinput {
    padding: 0;
}

/* The focus ring is on the same z-index as the input, so if an adjacent input
   has a background it will cover part of it. */

.tdinput :focus-visible {
    position: relative;
    z-index: 1;
}

.tdinput input,
.tdinput select,
.tdinput textarea {
    border: none;
    width: 100%;
    vertical-align: bottom;
    background-color: Field;
}

.tdinput input,
.tdinput select {
    height: var(--td-line-height);
}

.tdinput input,
.tdinput textarea {
    padding: 0 var(--td-hpad);
    resize: vertical;
}

.tdinput :disabled,
.tdinput [readonly] {
    background-color: var(--canvas);
    color: GrayText;
}

:invalid:not(:focus) {
    outline: 2px solid red;
}

.date-table {
    align-self: flex-start;
}

[is="date-repeat"]~.repeat {
    display: none;
}

[is="date-repeat"][data-value=R]~.R {
    display: table-row;
}

[is="date-repeat"][data-value=C]~.C {
    display: table-row;
}

.suggested {
    color: GrayText;
    font-style: italic;
}

.number {
    text-align: right;
}

.edit-table {
    position: relative;
}

.tdinput .currency,
.tdinput .sigil {
    position: absolute;
    padding-left: var(--td-hpad);
    z-index: 2;
    background-color: transparent;
    /* ??? */
    width: max-content;
}

.tdinput .currency+input {
    padding-left: calc(var(--td-hpad) + 4ch);
}

.tdinput .sigil+input {
    padding-left: calc(var(--td-hpad) + 2ch);
}

.part-extras {
    display: flex;
    width: 100%;
    align-items: flex-start;
    gap: var(--line-height);
}

.note {
    width: 50px;
    flex: 1 1;
}

.datepicker {
    width: max-content;
    border: var(--td-border) solid var(--line);
    align-self: center;
}

.months,
.years {
    display: flex;
}

.years>input {
    position: absolute;
    left: -100px;
}

.years {
    gap: var(--td-border);
    background-color: var(--line);
}

.years>label {
    background-color: var(--canvas);
}

.years>:not(:checked)+label {
    border-bottom: var(--td-border) solid var(--line);
    background-color: var(--alt-canvas);
}

.years>:focus-visible+label {
    outline: 3px solid LinkText;
    outline: 3px solid AccentColor;
    border-radius: 2px;
    position: relative;
    z-index: 1;
}

.years>label,
.months>a {
    flex-grow: 1;
    padding: 0 var(--td-hpad);
    text-align: center;
}

.months>.current {
    font-weight: bold;
    text-decoration: inherit;
    color: inherit;
}

.newaccount {
    float: right;
}

.newaccount::before {
    content: '←';
    position: absolute;
    margin-left: calc(var(--td-hpad) + var(--td-border));
}